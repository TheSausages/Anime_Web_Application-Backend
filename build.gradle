plugins {
    id "com.github.node-gradle.node" version "3.1.1"
	id "org.springframework.boot" version "2.5.3"
	id "io.spring.dependency-management" version "1.0.11.RELEASE"
	id "java"
}

ext {
    springVersion = "2.5.3"
    keycloakVersion = "15.0.0"
    mysqlConnectorVersion = "8.0.25"
    lombokVersion = "1.18.20"
}

group = "pwr"
version = "0.0.1-SNAPSHOT"
sourceCompatibility = "14"

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	//Spring Boot Dependencies
	implementation "org.springframework.boot:spring-boot-starter-data-jpa:${springVersion}"
	implementation "org.springframework.boot:spring-boot-starter-data-rest:${springVersion}"
	implementation "org.springframework.boot:spring-boot-starter-security:${springVersion}"
	implementation "org.springframework.boot:spring-boot-starter-web:${springVersion}"
	implementation "org.springframework.boot:spring-boot-starter-webflux:${springVersion}"
	implementation "org.springframework.boot:spring-boot-starter-validation:${springVersion}"
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor:${springVersion}"

	//Keycloak Dependencies
	implementation "org.keycloak:keycloak-spring-boot-starter:${keycloakVersion}"
	implementation "org.keycloak.bom:keycloak-adapter-bom:${keycloakVersion}"
	implementation "org.keycloak:keycloak-admin-client:${keycloakVersion}"

	//Database Dependencies
	implementation "mysql:mysql-connector-java:${mysqlConnectorVersion}"

	//Other Dependencies
	compileOnly "org.projectlombok:lombok:${lombokVersion}"
	annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
	implementation "org.apache.commons:commons-lang3:3.12.0"
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.0'

	//Testing Dependencies
	testImplementation "org.springframework.boot:spring-boot-starter-test:${springVersion}"
	testImplementation "io.projectreactor:reactor-test:3.4.8"
	testImplementation "org.springframework.security:spring-security-test:5.5.1"
	testImplementation "mysql:mysql-connector-java:${mysqlConnectorVersion}"
}

test {
	useJUnitPlatform()
}

node {
    download = true
    version = "14.16.1"
    npmVersion = "6.14.12"
    distBaseUrl = "https://nodejs.org/dist"
    npmInstallCommand = "install"
    workDir = file("$projectDir/../ReactFrontEnd/nodejs")
    npmWorkDir = file("$projectDir/../ReactFrontEnd/npm")
    nodeModulesDir = file("$projectDir/../ReactFrontEnd")
}

task npmInstallDependencies(type: NpmTask) {
    dependsOn 'npmSetup'
    execOverrides {
        it.ignoreExitValue = true
        it.workingDir = "$projectDir/../ReactFrontEnd"
    }
    args = ['install']
}

task npmBuild(type: NpmTask) {
    dependsOn 'npmInstallDependencies'
    execOverrides {
        it.workingDir = "$projectDir/../ReactFrontEnd"
    }
    args = ['run', 'build']
}

task copyFrontendToBuild(type: Copy) {
    dependsOn 'npmBuild'
    from "$projectDir/../ReactFrontEnd/build/"
    into "$buildDir/resources/main/static"
}

processResources {
    def serve = System.getenv('SERVE_STATIC_CONTENT')
    if (serve != null && serve == 'serve') {
        dependsOn 'copyFrontendToBuild'
    }
}
